/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'

    // Cucumber Setting-1
    //with 'testImplementation' dependencies the code should be in src/test/java or else it wont detect imports
    //with 'implementation' dependencies the code should be in src/test/java OR src/main/java
    implementation 'io.cucumber:cucumber-java:7.9.0'
    implementation 'io.cucumber:cucumber-core:7.9.0'
    // Extent Reports
    implementation 'com.aventstack:extentreports:5.0.9'
    implementation 'tech.grasshopper:extentreports-cucumber7-adapter:1.9.2'

    // Playwright Dependencies
    // https://mvnrepository.com/artifact/com.microsoft.playwright/playwright
    implementation 'com.microsoft.playwright:playwright:1.32.0'

    // RestAssured Dependencies
    // https://mvnrepository.com/artifact/io.rest-assured/rest-assured
    implementation 'io.rest-assured:rest-assured:5.3.1'

    // https://mavenlibs.com/maven/dependency/org.apache.juneau/juneau-all
    implementation 'org.apache.juneau:juneau-all:9.0.0'
    // https://mavenlibs.com/maven/dependency/com.googlecode.json-simple/json-simple
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    // https://mavenlibs.com/maven/dependency/com.jayway.jsonpath/json-path
    implementation 'com.jayway.jsonpath:json-path:2.8.0'
    // https://mvnrepository.com/artifact/net.minidev/json-smart (When return type of Json path is JSONArray this dep is required)
    implementation 'net.minidev:json-smart:2.4.11'

    // https://mvnrepository.com/artifact/org.projectlombok/lombok
    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'
}

application {
    // Define the main class for the application.
    mainClass = 'api.automation_gradle_pw.ra.http_cucumber.App'
}

//Cucumber Setting-2
configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

//Cucumber Setting-3
task cucumber() {
    dependsOn assemble, testClasses

    String tags;
    String threads = 4;
    String htmlReportLocation = "${project.projectDir}/automation-execution-reports/CucumberReports/cucumber-report.html";
    String jsonReportLocation = "${project.projectDir}/automation-execution-reports/CucumberReports/cucumber-report.json";


    if (project.hasProperty("tags")) {
        tags = project.tags;
    } else {
        tags = "@regression"
    }

    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = [
                    "src/test/resources/features",
                    "--glue", "step_defs",
                    "--tags", "${tags}",
                    "--threads", "${threads}",
                    "--plugin", "pretty",
                    "--monochrome",
                    "--plugin", "json:${jsonReportLocation}",
                    "--plugin", "html:${htmlReportLocation}",
                    "--plugin", "com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter:"
            ]
        }
    }
}


tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
